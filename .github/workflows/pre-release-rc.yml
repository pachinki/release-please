name: Pre-Release (RC Tag)

on:
  workflow_call:
    inputs:
      base_version:
        description: "Base semantic version override (e.g. 1.2.0)"
        required: false
        type: string
      notes:
        description: "Optional release notes appended to prerelease body"
        required: false
        type: string
      target_branch:
        description: "Default branch used for prediction"
        required: false
        default: ""
        type: string
      release_type:
        description: "release-please release type"
        required: false
        default: "simple"
        type: string
      package_name:
        description: "Package / manifest key"
        required: false
        default: "workflows"
        type: string
      path:
        description: "Path used for prediction"
        required: false
        default: "."
        type: string
      create_release:
        description: "Create/update prerelease (true/false)"
        required: false
        default: "true"
        type: string
    outputs:
      rc_tag:
        description: "Result RC tag"
        value: ${{ jobs.prerelease.outputs.rc_tag }}
      base_version:
        description: "Resolved base version"
        value: ${{ jobs.prerelease.outputs.base_version }}
      rc_number:
        description: "RC number"
        value: ${{ jobs.prerelease.outputs.rc_number }}
      predicted_version:
        description: "Predicted normal version"
        value: ${{ jobs.prerelease.outputs.predicted_version }}
  workflow_dispatch:
    inputs:
      base_version:
        description: "Base semantic version override (e.g. 1.2.0)"
        required: false
      notes:
        description: "Optional release notes appended to prerelease body"
        required: false
  push:
    branches:
      - "rc/*"

permissions:
  contents: write
  pull-requests: read

jobs:
  prerelease:
    name: Create / Increment RC Tag
    runs-on: self-hosted
    outputs:
      base_version: ${{ steps.rc.outputs.base_version }}
      rc_number: ${{ steps.rc.outputs.rc_number }}
      rc_tag: ${{ steps.rc.outputs.rc_tag }}
      predicted_version: ${{ steps.rc.outputs.predicted_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run composite RC action
        id: rc
        uses: ./.github/actions/pre-release-rc
        with:
          base-version: ${{ inputs.base_version || github.event.inputs.base_version }}
          notes: ${{ inputs.notes || github.event.inputs.notes }}
          target-branch: ${{ inputs.target_branch || github.event.repository.default_branch }}
          release-type: ${{ inputs.release_type || 'simple' }}
          package-name: ${{ inputs.package_name || 'workflows' }}
          path: ${{ inputs.path || '.' }}
          create-release: ${{ inputs.create_release || 'true' }}

      - name: Summary
        run: |
          {
            echo '### RC Created (Wrapper Workflow)'
            echo "* Base Version: ${{ steps.rc.outputs.base_version }}"
            echo "* RC Tag: ${{ steps.rc.outputs.rc_tag }}"
            echo "* RC Number: ${{ steps.rc.outputs.rc_number }}"
            echo "* Predicted normal version: ${{ steps.rc.outputs.predicted_version }}"
            echo ''
            echo 'Consumers can test using:'
            echo ''
            echo '```yaml'
            echo 'uses: your-org/REPO/.github/workflows/pipeline-example.yml@${{ steps.rc.outputs.rc_tag }}'
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
